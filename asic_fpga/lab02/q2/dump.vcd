$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module Q2_LUT3_TB $end
   $var wire 1 + A0 $end
   $var wire 1 , A1 $end
   $var wire 1 - A2 $end
   $var wire 1 . A3 $end
   $var wire 1 / OUT $end
   $scope module UUT $end
    $var wire 1 + A0 $end
    $var wire 1 , A1 $end
    $var wire 1 - A2 $end
    $var wire 1 . A3 $end
    $var wire 1 / OUT $end
    $var wire 1 # nor_0_out $end
    $var wire 1 ' nor_1_out $end
    $var wire 1 $ and_0_out $end
    $var wire 1 ( and_1_out $end
    $var wire 1 0 or_0_out $end
    $scope module AND_0_INST $end
     $var wire 1 , A $end
     $var wire 1 - B $end
     $var wire 1 . C $end
     $var wire 1 $ OUT $end
     $scope module AND_0_INST $end
      $var wire 8 3 INIT [7:0] $end
      $var wire 1 , I0 $end
      $var wire 1 - I1 $end
      $var wire 1 . I2 $end
      $var wire 1 $ O $end
      $var wire 1 % tmp $end
     $upscope $end
    $upscope $end
    $scope module AND_1_INST $end
     $var wire 1 + A $end
     $var wire 1 - B $end
     $var wire 1 . C $end
     $var wire 1 ( OUT $end
     $scope module AND_0_INST $end
      $var wire 8 3 INIT [7:0] $end
      $var wire 1 + I0 $end
      $var wire 1 - I1 $end
      $var wire 1 . I2 $end
      $var wire 1 ( O $end
      $var wire 1 ) tmp $end
     $upscope $end
    $upscope $end
    $scope module NOR_0_INST $end
     $var wire 1 , A $end
     $var wire 1 - B $end
     $var wire 1 . C $end
     $var wire 1 # OUT $end
     $scope module OR_0_INST $end
      $var wire 8 4 INIT [7:0] $end
      $var wire 1 , I0 $end
      $var wire 1 - I1 $end
      $var wire 1 . I2 $end
      $var wire 1 # O $end
      $var wire 1 & tmp $end
     $upscope $end
    $upscope $end
    $scope module NOR_1_INST $end
     $var wire 1 + A $end
     $var wire 1 - B $end
     $var wire 1 . C $end
     $var wire 1 ' OUT $end
     $scope module OR_0_INST $end
      $var wire 8 4 INIT [7:0] $end
      $var wire 1 + I0 $end
      $var wire 1 - I1 $end
      $var wire 1 . I2 $end
      $var wire 1 ' O $end
      $var wire 1 * tmp $end
     $upscope $end
    $upscope $end
    $scope module OR_0_INST $end
     $var wire 1 # A $end
     $var wire 1 $ B $end
     $var wire 1 ' C $end
     $var wire 1 0 OUT $end
     $scope module OR_0_INST $end
      $var wire 8 5 INIT [7:0] $end
      $var wire 1 # I0 $end
      $var wire 1 $ I1 $end
      $var wire 1 ' I2 $end
      $var wire 1 0 O $end
      $var wire 1 1 tmp $end
     $upscope $end
    $upscope $end
    $scope module OR_1_INST $end
     $var wire 1 0 A $end
     $var wire 1 ( B $end
     $var wire 1 6 C $end
     $var wire 1 / OUT $end
     $scope module OR_0_INST $end
      $var wire 8 5 INIT [7:0] $end
      $var wire 1 0 I0 $end
      $var wire 1 ( I1 $end
      $var wire 1 6 I2 $end
      $var wire 1 / O $end
      $var wire 1 2 tmp $end
     $upscope $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
1#
0$
0%
0&
1'
0(
0)
0*
0+
0,
0-
0.
1/
10
01
12
b10000000 3
b00000001 4
b11111110 5
06
#10000
0#
1%
1&
0'
1)
1*
1.
0/
00
02
#20000
1-
0.
#30000
0%
0&
0)
0*
1.
#40000
1%
1&
1'
1,
0-
0.
1/
10
11
12
#50000
0%
0&
0'
1)
1*
1.
0/
00
01
02
#60000
1-
0.
#70000
1$
1%
1&
0)
0*
1.
1/
10
11
12
#80000
1#
0$
0%
0&
1)
1*
1+
0,
0-
0.
#90000
0#
1%
1&
0)
0*
1.
0/
00
01
02
#100000
1-
0.
#110000
0%
0&
1(
1)
1*
1.
1/
12
#120000
1%
1&
0(
1,
0-
0.
0/
02
#130000
0%
0&
0)
0*
1.
#140000
1-
0.
#150000
1$
1%
1&
1(
1)
1*
1.
1/
10
11
